//
//  PokemonDetailInteractor.swift
//  SPokemon
//
//  Created by JosÃ© Moreira on 20/12/2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Domain

protocol PokemonDetailBusinessLogic {
    func fetchData(request: PokemonDetail.Detail.Request)
}

protocol PokemonDetailDataStore {
    var selectedPokemon: PokemonModel? { get set }
}

class PokemonDetailInteractor: BaseInteractor, PokemonDetailBusinessLogic, PokemonDetailDataStore {
    
    var selectedPokemon: PokemonModel?

    var presenter: PokemonDetailPresentationLogic?
    var worker: PokemonDetailWorker?

    override func basePresenter() -> BasePresentationLogic? { return presenter }

    // MARK: Do something

    func fetchData(request: PokemonDetail.Detail.Request) {
        guard let pokemon = selectedPokemon else { return }
        worker = PokemonDetailWorker()

        if let id = pokemon.url.split(separator: "/").last {
            presentLoading()
            worker?.fetchPokemonList(id: String(id)).subscribe(onSuccess: { [weak self] model in
                guard let self = self else { return }
                self.presentHideLoading()
                let response = PokemonDetail.Detail.Response(pokemonDetail: model)
                self.presenter?.presentPokemonDetail(response: response)
            }, onError: { error in

            }).disposed(by: disposeBag)
        }
    }
}
